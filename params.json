{"name":"Scopeio","tagline":"Small utility to get screen dumps and measured data from Rigol DS1054 oscilloscope, using vxi11 software transport over Ethernet","body":"# scopeio\r\nSmall utility to get screen dumps and measured data from Rigol DS1054 oscilloscope, using vxi11 software transport over Ethernet. Controlling the oscilloscope is possible, so any gui could be build over the vxi11 transport, but for now this is just a command line tool.\r\n\r\n# How it works\r\n\r\nIt uses very little modified github project https://github.com/applied-optics/vxi11 program vxi11_cmd as transport, the needed patch is in src/vxi11_cmd_changes.patch. The higher level is python code written for the project, it uses python-pexpect, python-numpy and python-gnuplot packages at least.\r\n\r\nDifferent from other similar programs this stores the output to files and only  optionally shows them by desired external program.\r\n\r\nThe screendumps will always be in .bmp format as the data comes as is from the oscilloscope itself.\r\n\r\nThe processed outputs can now be taken as .png or .svg format, but of course gnuplot can be modified to generate more options. Also the look of the processed output is very basic, it would need someone knowing gnuplot better to have much nicer pictures.\r\n\r\nExamples of the output files are in pictures directory.\r\n\r\n# Usage\r\n\r\nHere is the help from the python program:\r\n\r\n```\r\nUsage: scopeio.py [--help] [--nomeas] [--prefix=namestart] [--view=program] [--format=<fmt>] [--screen] [--noscreen] [--addr=a.b.c.d] [--config=filename] channels [channels] ... [channels]\r\nDefault prefix is scope\r\nFormats supported now: png (default) and svg\r\nExamples:\r\n  scope --nomeas --view=mirage 1           -- channel1 shown in mirage with no measurements (faster)\r\n  scope 12 34 13 23  --prefix=myfile       -- ch1/ch2 ch3/ch4 ch1/ch3 ch3/ch4 images done in png with measurements\r\n  scope --view=gimp 1234 --format=svg      -- all 4 channels in svg and send to gimp\r\n  scope --screen                           --- take only display screen dump\r\n  scope --screen 12                        --- take screen dump and two channel graph\r\n  scope --addr=192.168.1.100 1 --noscreen  --- scope ip address set, no screen capture even when config file has screen on\r\n  scope --config=~/.scopeio.myconfig       --- alternate config file, default is ~/.scopeio\r\n\r\nThere can also be config file ~/.scopeio with all the settings, one per line with command line syntax\r\n```\r\n\r\n# Examples\r\n\r\nPictures in pictures directory are made by next two command examples:\r\n\r\n./scopeio.py --screen 12 --view=mirage\r\n\r\n![Screendump converted ro png for viewing here](pictures/bmp/scope-screendump-10.06.2015-17.44.38.png)\r\n\r\n![Measurement of two channels](pictures/png/scope-12-10.06.2015-17.45.09.png)\r\n\r\n./scopeio.py --noscreen 1 2 1234 --format=svg --view=gimp\r\n\r\n![Measurement of one channel](pictures/svg/scope-1-10.06.2015-17.45.52.svg.png)\r\n\r\n![Measurement of one channel](pictures/svg/scope-2-10.06.2015-17.46.10.svg.png)\r\n\r\n![Measurement of fuor channels](pictures/svg/scope-1234-10.06.2015-17.47.07.svg.png)\r\n\r\nNote that scalings vary as different channels are shown. \r\nFor same display as in oscilloscope the screendump works better.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}